---- sidecurl
------- building cURL & sidecurl
Build libcurl
$ cd curl
$ mkdir buildtarget
$ ./configure .... (see docs)
$ make -j4

Build sidecurl
$ cd sidecurl
$ make

------- using sidecurl
Send quacks repeatedly
$ watch -n1 ./send_quack.sh 'quack.quack'

In a separate shell, run sidecurl, e.g., on a long download:
$ ./wrapped_sidecurl https://releases.ubuntu.com/22.04.1/ubuntu-22.04.1-desktop-amd64.iso -o /dev/null
New quack: 'quack.quack' (recieved 0 maincar bytes)
New quack: 'quack.quack' (recieved 311296 maincar bytes)
New quack: 'quack.quack' (recieved 13238272 maincar bytes)
New quack: 'quack.quack' (recieved 32866304 maincar bytes)
...

Note that sidecurl will do a POST if you pass --data-binary @<file>

------- options supported
See man curl for more info; behavior of these options is intended to be
compatible with curl

-o, --output <file>         write to <file> instead of stdout
-1, --http1.1               tell curl to use HTTP v1.1
-3, --http3                 tell curl to use HTTP v3
-q, --quiche-cc <alg>       tell quiche to use [cubic|reno|bbr]
-Q, --quack-reset           whether to send quack reset messages
-u, --quack-style           style of quack to send/receive
-S, --sidecar-mtu           send packets only if the cwnd > mtu
-s, --sidecar <iface>       tell quiche to use <iface> as the sidecar iface
-t, --threshold <number>    specify the sidecar threshold
-w, --write-out <format>    format string for display on stdout afterwards
-d, --data-binary @<file>   send the contents of @<file> as an HTTP POST
                            NOTE: only @<file> supported currently, not <str>
-k, --insecure              tell curl not to attempt to validate peer signatures
-m, --max-time <secs>       timeout the operation after this many seconds
