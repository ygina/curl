Basic MVP of a curl UDP socket running side-by-side with a large transfer.

Start a long-running download in parallel mode:

./src/curl -Z --insecure https://releases.ubuntu.com/22.04.1/ubuntu-22.04.1-desktop-amd64.iso -o /dev/null

And then:

$ nc -u -N 127.0.0.1 5103
hi
hello
quack
quack

You should see curl print for each line in the nc input

Notes:
- Currently stuck into the parallel transfer loop in curl-tool. This is why -Z
  is required. This is a convenient location because the outer polling loop is
  in the tool.  For a more robust version of this, we probably want to stick
  the quack checking in to easy_transfer(...) for sequential downloads.
- In both cases, curl under-the-hood uses curl_multi_poll. This allows us to
  specify timeouts in the milliseconds unclear if that is fast enough for
  quACKs. Also very clear that the approach of basically turning the poll into
  a busywaiting is not ideal. Unless quacks are OK to come in on the order of
  ~100ms, I think what we should do is curl_multi_poll with the quack socket
  being waited/poll'd on as part of the "multi."
